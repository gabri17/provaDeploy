{"ast":null,"code":"import format from 'date-fns/format';\nexport default {\n  data() {\n    return {\n      valid: false,\n      dialog: false,\n      nomeU: '',\n      cognomeU: '',\n      emailU: '',\n      indirizzoU: '',\n      oldPass: '',\n      newPass: '',\n      confirmNewPass: '',\n      dobU: '',\n      metodiPagamentoU: '',\n      newPassword: '',\n      emailRules: [v => !v || /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) || 'E-mail non valida.'],\n      oldPassRule: [v => v.match(this.$store.state.datiUtente.password) !== null || 'Password errata!'],\n      required: [v => !!v || 'Campo Obbligatorio per cambiare la password!'],\n      passwordCrit: [v => v.match(/^(?=.*[0-9])(?=.*[!£%&?€=^])[a-zA-Z0-9!£%&?€=^*]{8,15}/) !== null || 'Password non valida!']\n    };\n  },\n  methods: {\n    async aggiornaUtente() {\n      if (this.nomeU === '') {\n        this.nomeU = this.$store.state.datiUtente.nome;\n      } else {\n        this.$store.state.datiUtente.nome = this.nomeU;\n      }\n      if (this.cognomeU === '') {\n        this.cognomeU = this.$store.state.datiUtente.cognome;\n      } else {\n        this.$store.state.datiUtente.cognome = this.cognomeU;\n      }\n      if (this.dobU === '') {\n        this.dobU = this.$store.state.datiUtente.dataDiNascita;\n      } else {\n        this.$store.state.datiUtente.dataDiNascita = this.dobU;\n      }\n      if (this.emailU === '') {\n        this.emailU = this.$store.state.datiUtente.email;\n      } else {\n        this.$store.state.datiUtente.emailU = this.emailU;\n      }\n      if (this.indirizzoU === '') {\n        this.indirizzoU = this.$store.state.datiUtente.indirizzo;\n      } else {\n        this.$store.state.datiUtente.indirizzo = this.indirizzoU;\n      }\n      this.$store.state.datiUtente.metodiPagamento = this.metodiPagamentoU;\n      try {\n        fetch(this.$url + \"api/u/updateu\", {\n          method: 'PATCH',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.state.dataAuth.token\n          },\n          body: JSON.stringify({\n            username: this.$store.state.datiUtente.username,\n            nome: this.nomeU,\n            cognome: this.cognomeU,\n            datadinascita: this.dobU,\n            indirizzo: this.indirizzoU,\n            metodiPagamento: this.metodiPagamentoU\n          })\n        }).then(() => {\n          console.log(\"Dati utente aggiornati per \", this.$store.state.datiUtente.nome, \"!\");\n          this.dialog = false;\n        });\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n\n      try {\n        fetch(this.$url + \"api/u/updatee\", {\n          method: 'PATCH',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.state.dataAuth.token\n          },\n          body: JSON.stringify({\n            username: this.$store.state.datiUtente.username,\n            email: this.emailU\n          })\n        }).then(() => {\n          console.log(\"Email aggiornata per \", this.$store.state.datiUtente.nome, \"!\");\n          this.dialog = false;\n        });\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n    },\n\n    setForm() {\n      this.nomeU = this.$store.state.datiUtente.nome;\n      this.cognomeU = this.$store.state.datiUtente.cognome;\n      this.dobU = format(new Date(this.$store.state.datiUtente.datadinascita), \"yyyy-MM-dd\");\n      console.log(format(new Date(this.dobU), \"yyyy-MM-dd\"));\n      this.emailU = this.$store.state.datiUtente.email;\n      this.indirizzoU = this.$store.state.datiUtente.indirizzo;\n      this.metodiPagamentoU = this.$store.state.datiUtente.metodiPagamento;\n    },\n    async modificaPassword() {\n      try {\n        fetch(this.$url + \"api/u/updatep\", {\n          method: 'PATCH',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.state.dataAuth.token\n          },\n          body: JSON.stringify({\n            username: this.$store.state.datiUtente.username,\n            password: this.newPass\n          })\n        }).then(console.log(\"Password aggiornata per \", this.$store.state.datiUtente.nome, \"!\")).then(this.$store.state.datiUtente.password = this.newPass).then(this.chiudi());\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n    },\n\n    async chiudi() {\n      this.oldPass = '';\n      this.newPass = '';\n      this.confirmNewPass = '';\n      this.dialog = false;\n    },\n    passwordMatching() {\n      if (this.newPass === this.confirmNewPass) {\n        return true;\n      } else {\n        return \"Le password non combaciano!\";\n      }\n    }\n  },\n  mounted() {\n    this.getProfile();\n    this.setForm();\n  },\n  beforeUnmount() {\n    this.$refs.form.reset();\n  }\n};","map":{"version":3,"mappings":"AAgKA;AAGA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,aACAC,qMACA;MACAC,cACAD,mFACA;MACAE,WACAF,2DACA;MACAG,eACAH;IAEA;EACA;EACAI;IACA;MACA;QACA;MACA;QACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;MACA;QACAC;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;QACA;UACAC;UACA;QACA;MACA;QACAA;MACA;;MACA;QACAV;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACAC;YACAO;UACA;QACA;UACAD;UACA;QACA;MACA;QACAA;MACA;IACA;;IACAE;MACA;MACA;MACA;MACAF;MACA;MACA;MACA;IACA;IACA;MAEA;QACAV;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACAC;YACAS;UACA;QACA;MACA;QACAH;MACA;IACA;;IACA;MACA;MACA;MACA;MACA;IACA;IACAI;MACA;QACA;MACA;QACA;MACA;IACA;EAEA;EACAC;IACA;IACA;EACA;EACAC;IACA;EACA;AAEA","names":["data","valid","dialog","nomeU","cognomeU","emailU","indirizzoU","oldPass","newPass","confirmNewPass","dobU","metodiPagamentoU","newPassword","emailRules","v","oldPassRule","required","passwordCrit","methods","fetch","method","headers","body","username","nome","cognome","datadinascita","indirizzo","metodiPagamento","console","email","setForm","password","passwordMatching","mounted","beforeUnmount"],"sourceRoot":"src/components","sources":["modificaDatiUtente.vue"],"sourcesContent":["<template>\n    <v-row >\n      <v-dialog\n        v-model=\"dialog\"\n        persistent\n        max-width=\"600px\"\n      >\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            color=\"indigo\"\n            class=\"white--text\"\n            rounded\n            v-bind=\"attrs\"\n            v-on=\"on\"\n          >\n            Modifica Dati Utente\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">Modifica dati personali:</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                >\n                  <v-text-field\n                    label=\"Nome\"\n                    v-model=\"nomeU\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                >\n                  <v-text-field\n                    label=\"Cognome\"\n                    v-model=\"cognomeU\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col\n                  cols=\"12\"\n                  sm=\"6\"\n                  md=\"4\"\n                >\n                  <v-text-field\n                    label=\"Data di nascita:\"\n                    v-model=\"dobU\"\n                    type=\"date\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    label=\"Email\"\n                    v-model=\"emailU\"\n                    :rules=\"emailRules\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    label=\"Metodo di Pagamento\"\n                    v-model=\"metodiPagamentoU\"\n                    :rules=\"emailRules\"\n                    required\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    label=\"Indirizzo\"\n                    v-model=\"indirizzoU\"\n                    required\n                  ></v-text-field>\n                </v-col>\n            </v-row>\n            </v-container>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn\n            color=\"indigo\"\n            class=\"white--text\"\n            rounded\n            block\n            @click=\"aggiornaUtente\"\n            >\n            Applica Modifiche\n        </v-btn>\n          </v-card-actions>\n        </v-card>\n        <v-form v-model=valid class=\"submit\">\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">Modifica password:</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n                <v-row>\n                <v-row>\n                    <v-col cols=\"4\">\n                        <v-text-field\n                        label=\"Password Attuale\"\n                        v-model=\"oldPass\"\n                        type=\"password\"\n                        :rules=\"required.concat(oldPassRule)\"\n                        ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"4\">\n                        <v-text-field\n                        label=\"new Password\"\n                        type=\"password\"\n                        v-model=\"newPass\"\n                        :rules=\"required.concat(passwordCrit)\"\n                        ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"4\">\n                        <v-text-field\n                        label=\"Conferma new password\"\n                        v-model=\"confirmNewPass\"\n                        type=\"password\"\n                        :rules=\"required.concat(passwordMatching)\"\n                        ></v-text-field>\n                    </v-col>\n                    <small>Ricordati che per la password è necessario immettere uno di questi caratteri: ! £ % ? € = ^ </small>\n                </v-row>\n              </v-row>\n            </v-container>\n        </v-card-text>\n        <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n            color=\"indigo\"\n            class=\"white--text\"\n            rounded\n            :disabled=!valid\n            @click=\"modificaPassword\">\n            Modifica Password\n        </v-btn>\n        <v-btn\n        color=\"orange\"\n        class=\"white--text\"\n        rounded\n        @click=\"dialog=false\">\n        Chiudi\n    </v-btn>\n    </v-card-actions>\n    </v-card>\n    </v-form>\n      </v-dialog>\n    </v-row>\n  </template>\n\n<script>\nimport format from 'date-fns/format';\n\n\nexport default {\n    data() {\n        return {   \n            valid: false,\n            dialog: false,\n            nomeU: '',\n            cognomeU: '',\n            emailU: '',\n            indirizzoU: '',\n            oldPass: '',\n            newPass: '',\n            confirmNewPass: '',\n            dobU: '',\n            metodiPagamentoU: '',\n            newPassword: '',\n            emailRules: [\n                v => !v || /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) || 'E-mail non valida.',\n            ],\n            oldPassRule: [\n                v => (v.match(this.$store.state.datiUtente.password)) !== null || 'Password errata!'\n            ],\n            required: [\n                v => !!v || 'Campo Obbligatorio per cambiare la password!'\n            ],\n            passwordCrit: [\n                v => (v.match(/^(?=.*[0-9])(?=.*[!£%&?€=^])[a-zA-Z0-9!£%&?€=^*]{8,15}/))!== null  || 'Password non valida!'\n            ],\n        }\n    },\n    methods: {\n        async aggiornaUtente () {\n            if(this.nomeU === '') {\n                this.nomeU = this.$store.state.datiUtente.nome;\n            } else {\n                this.$store.state.datiUtente.nome = this.nomeU;\n            }\n            if(this.cognomeU === '') {\n                this.cognomeU = this.$store.state.datiUtente.cognome;\n            } else {\n                this.$store.state.datiUtente.cognome = this.cognomeU;\n            }\n            if(this.dobU === '') {\n                this.dobU = this.$store.state.datiUtente.dataDiNascita;\n            } else {\n                this.$store.state.datiUtente.dataDiNascita = this.dobU;\n            }\n            if(this.emailU === '') {\n                this.emailU = this.$store.state.datiUtente.email;\n            } else {\n                this.$store.state.datiUtente.emailU = this.emailU;\n            }\n            if(this.indirizzoU === '') {\n                this.indirizzoU = this.$store.state.datiUtente.indirizzo;\n            } else {\n                this.$store.state.datiUtente.indirizzo = this.indirizzoU;\n            }\n            this.$store.state.datiUtente.metodiPagamento = this.metodiPagamentoU;\n            try {\n                fetch(this.$url + \"api/u/updateu\", {\n                    method: 'PATCH',\n                    headers: { \n                        \"Content-Type\": \"application/json\",\n                        \"x-access-token\": this.$store.state.dataAuth.token\n                    },\n                    body: JSON.stringify({\n                        username: this.$store.state.datiUtente.username,\n                        nome: this.nomeU,\n                        cognome: this.cognomeU,\n                        datadinascita: this.dobU,\n                        indirizzo: this.indirizzoU,\n                        metodiPagamento: this.metodiPagamentoU,\n                    })\n                }).then(() => {\n                    console.log(\"Dati utente aggiornati per \", this.$store.state.datiUtente.nome, \"!\");\n                    this.dialog = false\n                })\n            } catch (error) {\n                console.error(error); // If there is any error you will catch them here\n            }\n            try {\n                fetch(this.$url + \"api/u/updatee\", {\n                    method: 'PATCH',\n                    headers: { \n                        \"Content-Type\": \"application/json\",\n                        \"x-access-token\": this.$store.state.dataAuth.token\n                    },\n                    body: JSON.stringify({\n                        username: this.$store.state.datiUtente.username,\n                        email: this.emailU\n                    })\n                }).then(() => {\n                    console.log(\"Email aggiornata per \", this.$store.state.datiUtente.nome, \"!\");\n                    this.dialog = false\n                })\n            } catch (error) {\n                console.error(error); // If there is any error you will catch them here\n            }\n        },\n        setForm() {\n            this.nomeU = this.$store.state.datiUtente.nome;\n            this.cognomeU = this.$store.state.datiUtente.cognome;\n            this.dobU = format(new Date(this.$store.state.datiUtente.datadinascita), \"yyyy-MM-dd\");\n            console.log(format(new Date(this.dobU), \"yyyy-MM-dd\"))\n            this.emailU = this.$store.state.datiUtente.email;\n            this.indirizzoU = this.$store.state.datiUtente.indirizzo;\n            this.metodiPagamentoU = this.$store.state.datiUtente.metodiPagamento;\n        },\n        async modificaPassword() {\n\n            try {\n                fetch(this.$url + \"api/u/updatep\", {\n                    method: 'PATCH',\n                    headers: { \n                        \"Content-Type\": \"application/json\",\n                        \"x-access-token\": this.$store.state.dataAuth.token\n                    },\n                    body: JSON.stringify({\n                        username: this.$store.state.datiUtente.username,\n                        password: this.newPass\n                    })\n                }).then(console.log(\"Password aggiornata per \", this.$store.state.datiUtente.nome, \"!\")).then(this.$store.state.datiUtente.password = this.newPass).then(this.chiudi())\n            } catch (error) {\n                console.error(error); // If there is any error you will catch them here\n            }\n        },\n        async chiudi() {\n            this.oldPass = '';\n            this.newPass = '';\n            this.confirmNewPass = '';\n            this.dialog = false;\n        },  \n        passwordMatching() {\n            if (this.newPass === this.confirmNewPass) {\n                return true;\n            } else {\n                return \"Le password non combaciano!\"\n            }\n        },\n        \n    },\n    mounted() {\n        this.getProfile();\n        this.setForm();\n    }, \n    beforeUnmount() {\n        this.$refs.form.reset();\n    }\n\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}