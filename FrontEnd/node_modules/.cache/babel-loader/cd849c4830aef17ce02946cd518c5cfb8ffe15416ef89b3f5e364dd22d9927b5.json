{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nexport default {\n  data() {\n    return {\n      localCat: '',\n      endpoint: '',\n      cat: '',\n      method: '',\n      keyword: '',\n      isEmpty: false,\n      API_URL: this.$url + 'api/a/',\n      euro: new Intl.NumberFormat('en-DE', {\n        style: 'currency',\n        currency: 'EUR'\n      })\n    };\n  },\n  computed: mapState({\n    cate: state => state.category,\n    annunci: state => state.annunci\n  }),\n  methods: {\n    async getfa() {\n      try {\n        fetch(this.endpoint, {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            categoria: this.cat\n          })\n        }).then(resp => resp.json()).then(data => {\n          // Here you get the data to modify as you please\n\n          this.$store.state.annunci = data;\n          if (this.$store.state.annunci[0] === undefined) this.isEmpty = true;\n          return;\n        });\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n    },\n\n    async getAll() {\n      try {\n        console.log(this.endpoint);\n        fetch(this.endpoint, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          // Here you get the data to modify as you please\n          this.$store.state.annunci = data;\n          if (this.$store.state.annunci[0] === undefined) this.isEmpty = true;\n          return;\n        });\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n    },\n\n    vaiAlleSpec() {\n      this.$router.push(\"/productspecs\");\n    },\n    onInput() {\n      this.cat = this.$refs.input.value;\n      this.$store.commit('selectCat', this.localCat);\n    }\n  },\n  created() {\n    this.cat = this.$store.state.category;\n    if (this.$store.state.keyword !== '') {\n      this.endpoint = this.API_URL + \"getkt/\" + this.$store.state.keyword;\n      this.getAll();\n    } else if (this.cat === '') {\n      this.endpoint = this.API_URL + 'getAll';\n      this.method = 'GET';\n      this.getAll();\n      //if (this.annunci)\n    } else {\n      this.endpoint = this.API_URL + 'getaf';\n      this.method = 'POST';\n      this.getfa();\n    }\n    this.$store.commit('isResultView', true);\n  }\n};","map":{"version":3,"mappings":";AAsDA;AAGA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,MACA;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACAC;IACAC;EACA;EAGAC;IACA;MACA;QACAC;UACAX;UACAY;YAAA;UAAA;UACAC;YAAAC;UAAA;QACA,6BACAC;UACA;;UAEA;UACA;UACA;QACA;MACA;QACAC;MACA;IACA;;IACA;MACA;QACAA;QACAL;UACAX;UACAY;YAAA;UAAA;QACA,6BACAG;UACA;UACA;UACA;UACA;QACA;MACA;QACAC;MACA;IACA;;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;IACA,OACA;MACA;MACA;MACA;MACA;IACA;MACA;MACA;MACA;IACA;IACA;EACA;AACA","names":["data","localCat","endpoint","cat","method","keyword","isEmpty","API_URL","euro","style","currency","computed","cate","annunci","methods","fetch","headers","body","categoria","then","console","vaiAlleSpec","onInput","created"],"sourceRoot":"src/views","sources":["SearchResults.vue"],"sourcesContent":["<template>\n    <div class=\"searchresults\">\n       \n        <v-card class=\"mx-auto justify-center\" max-width=\"1000\">\n            <v-container v-if=\"!isEmpty\" fluid>\n                <v-row dense>\n                    <v-col v-for=\"annuncio in annunci\" :key=\"annuncio._id\" :cols=\"4\">\n                        <v-card flat @click=\"vaiAlleSpec\" on>\n                            <v-img \n                            rounded \n                            :src=\"require('../assets/vuoto.webp')\" \n                            class=\"white--text align-end\" \n                            contain>\n                            </v-img>\n                            <v-card>\n                            <v-card-title class=\"black--text\">{{ annuncio.titolo }}</v-card-title>\n                                <v-card-text class=\"black--text\"> \n                                    <v-row\n                                    align=\"center\"\n                                    class=\"mx-0\"\n                                    >\n                                    \n                                    <h2>\n\n                                        {{ euro.format(annuncio.prezzo) }} \n                                    </h2>\n                                    \n                                </v-row>\n                                <v-row>\n                                    \n                                    <v-rating\n                                    :value=\"4.5\"\n                                    color=\"amber\"\n                                    dense\n                                    half-increments\n                                    readonly\n                                    size=\"14\"\n                                    ></v-rating>\n                                    <div class=\"grey--text\"> {{annuncio.inserzionista}} (10)</div>\n                                </v-row>\n                                </v-card-text>\n                            </v-card>\n                            <v-spacer></v-spacer>\n                        </v-card>\n                    </v-col>\n                </v-row>\n            </v-container>\n            <h1 v-else>Non sono presenti risultati.</h1>\n        </v-card>\n    </div>\n\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\n\nexport default {\n    data () {\n        return {\n            localCat: '',\n            endpoint: '',\n            cat: '',\n            method: '',\n            keyword: '',\n            isEmpty: false,\n            API_URL: this.$url + 'api/a/',\n            euro:  \n            new Intl.NumberFormat('en-DE', {\n                style: 'currency',\n                currency: 'EUR',\n            })\n\n        }\n    },\n    computed:  mapState({\n       cate: state => state.category,\n       annunci: state => state.annunci\n    }),\n\n\n    methods: {\n        async getfa() {\n            try {\n                fetch(this.endpoint, {\n                    method: 'POST',\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ categoria: this.cat }),\n                }).then((resp) =>resp.json())\n                .then(data => {\n                  // Here you get the data to modify as you please\n\n                this.$store.state.annunci = data\n                if (this.$store.state.annunci[0] === undefined) this.isEmpty=true; \n                  return;\n                })\n                } catch(error) {\n                    console.error(error); // If there is any error you will catch them here\n                }\n        },\n        async getAll() {\n            try {\n                console.log(this.endpoint)\n                fetch(this.endpoint, {\n                    method: 'GET',\n                    headers: { \"Content-Type\": \"application/json\" }\n                }).then((resp) =>resp.json())\n                .then(data => {\n                  // Here you get the data to modify as you please\n                this.$store.state.annunci = data\n                if (this.$store.state.annunci[0] === undefined) this.isEmpty=true; \n                  return;\n                })\n                } catch(error) {\n                    console.error(error); // If there is any error you will catch them here\n                }\n        },\n        vaiAlleSpec() {\n            this.$router.push(\"/productspecs\")\n        },  \n        onInput() {\n            this.cat = this.$refs.input.value\n            this.$store.commit('selectCat', this.localCat)\n        }\n    },\n    created() {\n        this.cat = this.$store.state.category;\n        if(this.$store.state.keyword !== '') {\n            this.endpoint = this.API_URL + \"getkt/\" + this.$store.state.keyword;\n            this.getAll();\n        }\n        else if (this.cat === '') {\n            this.endpoint = this.API_URL+'getAll'\n            this.method = 'GET'\n            this.getAll();\n            //if (this.annunci)\n        } else {\n            this.endpoint = this.API_URL+'getaf';\n            this.method = 'POST'\n            this.getfa();\n        } \n        this.$store.commit('isResultView', true)           \n    }    \n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}