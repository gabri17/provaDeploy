{"ast":null,"code":"import format from 'date-fns/format';\nexport default {\n  data() {\n    return {\n      recensioniUscita: [],\n      recensioniEntrata: []\n    };\n  },\n  computed: {},\n  methods: {\n    async getRecensioniUtente() {\n      try {\n        fetch(this.$url + \"api/r/getrv/\" + this.$store.state.datiUtente.username, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(resp => resp.json()).then(data => {\n          this.recensioniUscita = data;\n        });\n      } catch (error) {\n        console.error(error);\n      }\n      try {\n        fetch(this.$url + \"api/r/getra/\" + this.$store.state.datiUtente.username, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.state.dataAuth.token\n          }\n        }).then(resp => resp.json()).then(data => {\n          this.recensioniEntrata = data;\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    formattedDate(date) {\n      return format(new Date(date), 'dd/M/YYY');\n    }\n    // getTitolo(item) {\n    //     console.log(item)\n    //     try {\n    //         fetch(this.$url + \"api/r/getrt/\" + item.transazioneRecensita, {\n    //             method: 'GET',\n    //             headers: { \n    //                 \"Content-Type\": \"application/json\", \n    //             }\n    //         }).then((resp) => resp.json())\n    //             .then(data => {\n    //                 item.titolo = data.prodotto;\n    //                 console.log(\"titolo: \", item.titolo)\n    //             })\n    //     } catch (error) {\n    //         console.error(error);\n    //     }\n    // }\n  },\n\n  async created() {\n    await this.getRecensioniUtente();\n    //     console.log(\" ciao sono crreated\")\n    //     this.recensioniEntrata.forEach((item) =>{\n    //         console.log(item)\n    //         try {\n    //             fetch(this.$url + \"api/r/getrt/\" + item.transazioneRecensita, {\n    //                 method: 'GET',\n    //                 headers: { \n    //                     \"Content-Type\": \"application/json\", \n    //                 }\n    //             }).then((resp) => resp.json())\n    //                 .then(data => {\n    //                     item.titolo = data.prodotto;\n    //                     console.log(\"titolo: \", item.titolo)\n    //                 })\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n    //     })\n    //     console.log(\" ciao sono crreated1\")\n    // //   this.recensioniUscita.forEach(this.getTitolo())\n    //   console.log(\" ciao sono crreated2\")\n  }\n};","map":{"version":3,"mappings":"AAiHA;AAEA;EACAA;IACA;MACAC;MACAC;IACA;EACA;EACAC,WAEA;EACAC;IACA;MACA;QACAC;UACAC;UACAC;YACA;UACA;QACA,6BACAC;UACA;QACA;MACA;QACAC;MACA;MACA;QACAJ;UACAC;UACAC;YACA;YACA;UACA;QACA,6BACAC;UACA;QACA;MACA;QACAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AAEA","names":["data","recensioniUscita","recensioniEntrata","computed","methods","fetch","method","headers","then","console","formattedDate"],"sourceRoot":"src/views","sources":["recensioniUtente.vue"],"sourcesContent":["<template>\n    <v-card>\n        <v-row>\n            <v-col>\n                <v-row>\n                <v-spacer></v-spacer>\n\n                    <v-col>\n                        <h3> RECENSIONI RICEVUTE</h3>\n                    </v-col>\n                    <v-spacer></v-spacer>\n                </v-row>\n                <v-divider></v-divider>\n            <v-list>\n                <v-list-item>\n                    <v-list-item-content>\n                    <v-row>\n                        <v-col>\n                            UTENTE RECENSORE\n                        </v-col>                  \n                        <v-col>\n                            STELLE\n                        </v-col>\n                        <v-col cols=\"5\">\n                            DESCRIZIONE\n                        </v-col>\n                        <v-col>\n                            DATA\n                        </v-col>\n                    </v-row>\n                </v-list-item-content>\n            </v-list-item>\n            <v-list-item v-for=\"recensione in recensioniUscita\" :key=\"recensione._id\">\n                <v-list-item-content>\n                    <v-row>\n\n                        <v-col>\n                            {{ recensione.utenteRecensore }}\n                        </v-col>                    \n                        <v-col>\n                            <v-rating :value=\"recensione.stelle\" color=\"amber\" dense half-increments readonly size=\"14\">\n                        \n                            </v-rating>\n                        </v-col> \n                        <v-col cols=\"5\">                      \n                            {{ recensione.descrizione }}\n                        </v-col>\n                        <v-col>\n                            {{ formattedDate(recensione.dataRecensione) }}\n                        </v-col>\n                    </v-row>\n                </v-list-item-content>\n            </v-list-item>\n        </v-list>\n        </v-col>\n        <v-divider vertical=\"true\" width=\"2\" color=\"black\"></v-divider>\n        <v-col>\n            <v-row>\n                <v-spacer></v-spacer>\n                    <v-col>\n                        <h3> RECENSIONI EFFETTUATE</h3>\n                    </v-col>\n                <v-spacer></v-spacer>\n\n                </v-row>\n                <v-divider></v-divider>\n\n            <v-list>\n                <v-list-item>\n                    <v-list-item-content>\n                    <v-row>\n                        <v-col>\n                            UTENTE RECENSITO\n                        </v-col>                  \n                        <v-col>\n                            STELLE\n                        </v-col>\n                        <v-col cols=\"5\">\n                            DESCRIZIONE\n                        </v-col>\n                        <v-col>\n                            DATA\n                        </v-col>\n                    </v-row>\n                </v-list-item-content>\n            </v-list-item>\n            <v-list-item v-for=\"recensione in recensioniEntrata\" :key=\"recensione._id\">\n                <v-list-item-content>\n                    <v-row>\n                        <v-col>\n                            {{ recensione.utenteRecensito }}\n                        </v-col>                    \n                        <v-col>\n                            <v-rating :value=\"recensione.stelle\" color=\"amber\" dense half-increments readonly size=\"14\">\n                        \n                            </v-rating>\n                        </v-col> \n                        <v-col cols=\"5\">\n                            {{ recensione.descrizione }}\n                        </v-col>\n                        <v-col>\n                            {{ formattedDate(recensione.dataRecensione) }}\n                        </v-col>\n                    </v-row>\n                </v-list-item-content>\n            </v-list-item>\n        </v-list>\n        </v-col>\n    </v-row>\n    </v-card>\n</template>\n\n<script>\nimport format from 'date-fns/format';\n\nexport default {\n    data() {\n        return {\n            recensioniUscita: [],\n            recensioniEntrata: []\n        }\n    },\n    computed: {\n        \n    },\n    methods: {\n        async getRecensioniUtente() {\n            try {\n                fetch(this.$url + \"api/r/getrv/\" + this.$store.state.datiUtente.username, {\n                    method: 'GET',\n                    headers: { \n                        \"Content-Type\": \"application/json\", \n                    }\n                }).then((resp) => resp.json())\n                    .then(data => {\n                        this.recensioniUscita = data;\n                    })\n            } catch (error) {\n                console.error(error);\n            }\n            try {\n                fetch(this.$url + \"api/r/getra/\" + this.$store.state.datiUtente.username, {\n                    method: 'GET',\n                    headers: { \n                        \"Content-Type\": \"application/json\", \n                        \"x-access-token\": this.$store.state.dataAuth.token\n                    }\n                }).then((resp) => resp.json())\n                    .then(data => {\n                        this.recensioniEntrata = data;\n                    })\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        formattedDate(date) {\n            return format(new Date(date), 'dd/M/YYY');\n        },\n        // getTitolo(item) {\n        //     console.log(item)\n        //     try {\n        //         fetch(this.$url + \"api/r/getrt/\" + item.transazioneRecensita, {\n        //             method: 'GET',\n        //             headers: { \n        //                 \"Content-Type\": \"application/json\", \n        //             }\n        //         }).then((resp) => resp.json())\n        //             .then(data => {\n        //                 item.titolo = data.prodotto;\n        //                 console.log(\"titolo: \", item.titolo)\n        //             })\n        //     } catch (error) {\n        //         console.error(error);\n        //     }\n        // }\n    },\n\n    async created() {\n        await this.getRecensioniUtente();  \n    //     console.log(\" ciao sono crreated\")\n    //     this.recensioniEntrata.forEach((item) =>{\n    //         console.log(item)\n    //         try {\n    //             fetch(this.$url + \"api/r/getrt/\" + item.transazioneRecensita, {\n    //                 method: 'GET',\n    //                 headers: { \n    //                     \"Content-Type\": \"application/json\", \n    //                 }\n    //             }).then((resp) => resp.json())\n    //                 .then(data => {\n    //                     item.titolo = data.prodotto;\n    //                     console.log(\"titolo: \", item.titolo)\n    //                 })\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n    //     })\n    //     console.log(\" ciao sono crreated1\")\n    // //   this.recensioniUscita.forEach(this.getTitolo())\n    //   console.log(\" ciao sono crreated2\")\n    },\n\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}