{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: () => ({\n    metodiPagamento: '',\n    abilitaPagamentoOnline: false,\n    vendita: true,\n    affitto: false,\n    valid: false,\n    selectCat: null,\n    categories: [],\n    costoH: \"\",\n    costoG: \"\",\n    costoS: \"\",\n    costoVen: \"\",\n    range: {\n      start: \"\",\n      end: \"\"\n    },\n    periodoNonDisponibile: [],\n    titolo: \"\",\n    descrizione: \"\",\n    via: \"\",\n    città: \"\",\n    provincia: \"\",\n    annuncioSalvato: false,\n    erroreAnnuncio: false,\n    message: \"\",\n    required: [v => !!v || \"Campo obbligatorio\"],\n    titoloRule: [v => v.length <= 30 || \"Il titolo non può superare i 30 caratteri!\"],\n    descrizioneRule: [v => v.length <= 250 || \"La descrizione non può superare i 250 caratteri!\"],\n    emailRules: [v => /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) || 'E-mail non valida.'],\n    noNegative: [v => v >= 0 || \"No negativi\"]\n  }),\n  methods: {\n    async salvaAnnuncio() {\n      console.log(\"Abilita pagamento online è:\", this.abilitaPagamentoOnline);\n      try {\n        fetch(this.$url + \"api/a/savea\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.getters.token\n          },\n          body: JSON.stringify({\n            inserzionista: this.$store.state.datiUtente.username,\n            titolo: this.titolo,\n            descrizione: this.descrizione,\n            dataPubblicazione: this.today(),\n            modalitaTransazione: this.vendita ? \"Vendita\" : \"Affitto\",\n            categoria: this.selectCat,\n            via: this.via,\n            citta: this.città,\n            provincia: this.provincia,\n            contoPaypall: this.contoPayPal,\n            prezzo: this.costoVen,\n            prezzoAffittoAlGiorno: this.costoG,\n            prezzoAffittoSettimanale: this.costoS,\n            prezzoAffittoAllOra: this.costoH,\n            pagamentoOnline: this.abilitaPagamentoOnline\n          })\n        }).then(resp => resp.json()).then(data => {\n          console.log(data);\n          if (data.success === false) {\n            this.message = data.message;\n            this.erroreAnnuncio = true;\n            return;\n          }\n          this.annuncioSalvato = true;\n          this.contaAnnunciOnline(this.$store.state.datiUtente.username);\n          this.$store.state.pubblicazioneAnnuncioSuccess = true;\n          this.$router.push(\"/\");\n        });\n      } catch (error) {\n        console.error(error);\n      }\n      if ((this.$store.state.datiUtente.metodiPagamento === '' || this.$store.state.datiUtente.metodiPagamento === undefined) && this.abilitaPagamentoOnline) {\n        this.salvaMetodoPagamento();\n      }\n    },\n    async salvaMetodoPagamento() {\n      try {\n        console.log(this.metodiPagamento);\n        this.$store.state.datiUtente.metodiPagamento = this.metodiPagamento;\n        fetch(this.$url + \"api/u/updateu\", {\n          method: 'PATCH',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": this.$store.state.dataAuth.token\n          },\n          body: JSON.stringify({\n            username: this.$store.state.datiUtente.username,\n            metodiPagamento: this.metodiPagamento\n          })\n        }).then(console.log(\"Dati utente aggiornati per \", this.$store.state.datiUtente.nome, \"!\"));\n      } catch (error) {\n        console.error(error); // If there is any error you will catch them here\n      }\n    },\n\n    today() {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n      var yyyy = today.getFullYear();\n      return yyyy + \"/\" + mm + \"/\" + dd;\n    }\n  },\n  computed: {\n    pagamentoOnlineControllo() {\n      console.log(\"Metodi di pagamento è. \", this.$store.state.datiUtente.metodiPagamento);\n      console.log(this.$store.state.datiUtente);\n      return this.$store.state.datiUtente.metodiPagamento === '' || this.$store.state.datiUtente.metodiPagamento === undefined;\n    }\n  },\n  mounted() {\n    if (this.$store.state.dataAuth.success == false) {\n      this.$router.push(\"/userloginsignup\");\n    }\n  },\n  created() {\n    this.$categories.forEach(v => this.categories.push(v.title));\n  }\n};","map":{"version":3,"mappings":";AAwOA;EACAA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;MACAC;MACAC;IACA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,WACAC,iCACA;IACAC,aACAD,oEACA;IACAE,kBACAF,2EACA;IACAG,aACAH,+LACA;IACAI,aACAJ;EAGA;EACAK;IACA;MACAC;MACA;QACAC;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACAC;YACApB;YACAC;YACAoB;YACAC;YACAC;YACArB;YACAsB;YACApB;YACAqB;YACAC;YACAC;YACAC;YACAC;YACAC;UACA;QACA,6BACAC;UACAhB;UACA;YACA;YACA;YACA;UACA;UACA;UACA;UACA;UACA;QACA;MACA,EACA;QACAA;MACA;MACA;QACA;MACA;IACA;IACA;MACA;QACAA;QACA;QACAC;UACAC;UACAC;YACA;YACA;UACA;UACAC;YACAa;YACA/C;UACA;QACA;MACA;QACA8B;MACA;IACA;;IACAkB;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACApB;MACAA;MACA;IACA;EACA;EACAqB;IACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["data","metodiPagamento","abilitaPagamentoOnline","vendita","affitto","valid","selectCat","categories","costoH","costoG","costoS","costoVen","range","start","end","periodoNonDisponibile","titolo","descrizione","via","città","provincia","annuncioSalvato","erroreAnnuncio","message","required","v","titoloRule","descrizioneRule","emailRules","noNegative","methods","console","fetch","method","headers","body","inserzionista","dataPubblicazione","modalitaTransazione","categoria","citta","contoPaypall","prezzo","prezzoAffittoAlGiorno","prezzoAffittoSettimanale","prezzoAffittoAllOra","pagamentoOnline","then","username","today","computed","pagamentoOnlineControllo","mounted","created"],"sourceRoot":"src/views","sources":["PubblicaAnnuncio.vue"],"sourcesContent":["<template>\n  <v-container>\n  <h1 justify=\"center\" align=\"center\"> Nuovo Annuncio</h1>\n  <v-form v-model=\"valid\" class=\"submit\">\n    <v-text-field \n    ma=\"auto\" \n    filled \n    dense \n    rounded \n    v-model=\"titolo\" \n    id=\"titolo\" \n    label=\"Titolo Annuncio\" \n    name=\"titolo\"\n    type=\"text\" \n    color=\"accent accent-3\" \n    :counter=\"30\" \n    :rules=\"required.concat(titoloRule)\" />\n  \n    <v-select \n    filled \n    dense \n    rounded \n    v-model=\"selectCat\" \n    :items=\"categories\" \n    :rules=\"[v => !!v || 'Item is required']\"\n    label=\"Categoria\" \n    required></v-select>\n  \n    <v-textarea \n    v-model=\"descrizione\" \n    id=\"descrizione\" \n    name=\"descrizione\" \n    label=\"Descrizione\"\n    color=\"accent accent-3\" \n    :rules=\"required.concat(descrizioneRule)\" \n    :counter=\"250\" \n    no-resize \n    filled \n    dense \n    rounded \n    auto-grow></v-textarea>\n    \n    <v-row>\n      <v-col>\n        <v-text-field \n        v-model=\"via\" \n        id=\"via\" \n        label=\"Via/Piazza\"\n        placeholder=\"via Sommarive 9\" \n        name=\"via\" \n        type=\"text\" \n        color=\"accent accent-3\"\n        :rules=\"required\"\n        filled \n        dense \n        rounded />\n      </v-col>\n      <v-col>\n        <v-text-field \n        v-model=\"città\" \n        id=\"città\" \n        label=\"Città\"\n        placeholder=\"Povo\" \n        name=\"città\" \n        type=\"text\" \n        color=\"accent accent-3\"\n        :rules=\"required\"\n        filled \n        dense \n        rounded />\n      </v-col>\n      <v-col>\n        <v-text-field \n        v-model=\"provincia\" \n        id=\"provincia\" \n        label=\"Provincia\"\n        placeholder=\"Trento\" \n        name=\"provincia\" \n        type=\"text\" \n        color=\"accent accent-3\"\n        :rules=\"required\"\n        filled \n        dense \n        rounded />\n      </v-col>\n    </v-row>\n    <v-checkbox \n      v-model= \"affitto\" \n      :value=\"affitto\"\n      :disable=\"vendita\"\n      label=\"affitto\"\n      color=\"indigo\"\n      hide-details\n      large\n      @click=\"vendita = false\"\n    ></v-checkbox>\n    <v-checkbox \n      v-model= \"vendita\"\n      :value=\"vendita\"\n      :disable=\"affitto\"\n      label=\"vendita\"\n      color=\"indigo\"\n      hide-details\n      large\n      @click=\"affitto = false\"\n    ></v-checkbox>\n    <v-container\n      \n\n    v-if=\"!vendita && affitto\"\n    >\n    <v-row ma = \"auto\">\n\n      <v-col :cols=\"3\">\n        <v-text-field\n        v-model=\"costoH\"\n        id=\"costoH\"\n        label=\"Costo all'ora?\"\n        name=\"costoH\"\n        type=\"number\"\n        color=\"accent accent-3\"\n        :rules= \"required.concat(noNegative)\"\n        filled\n        dense\n        rounded      \n        />\n      </v-col>\n\n      <v-col :cols=\"3\">\n      <v-text-field\n        v-model=\"costoG\"\n        id=\"costoG\"\n        label=\"Costo al giorno?\"\n        name=\"costoG\"\n        type=\"number\"\n        color=\"accent accent-3\"\n        :rules= \"required.concat(noNegative)\"\n        filled\n        dense\n        rounded      \n        />\n      </v-col>\n\n      <v-col :cols=\"3\">\n      <v-text-field\n        v-model=\"costoS\"\n        id=\"costoS\"\n        label=\"Costo alla settimana?\"\n        name=\"costoS\"\n        type=\"number\"\n        color=\"accent accent-3\"\n        :rules= \"required.concat(noNegative)\"     \n        filled\n        dense\n        rounded      \n        />\n      </v-col>\n    </v-row>\n    </v-container>\n\n    <v-container\n    v-if=\"!affitto && vendita\" \n    >\n      <v-row>        \n        <v-col :cols=\"3\" ma=\"auto\">\n          <v-text-field\n          v-model=\"costoVen\"\n          id=\"costoVen\"\n          label=\"Prezzo di Vendita?\"\n          name=\"costoVen\"\n          type=\"number\"\n          color=\"accent accent-3\"\n          :rules=\"required.concat(noNegative)\"\n          filled\n          dense\n          rounded      \n          />\n        </v-col>\n      </v-row>\n    </v-container>\n    <v-row>\n      <v-col>\n        <v-checkbox\n        v-model=\"abilitaPagamentoOnline\" \n        label=\"Abilita il pagamento Online\"\n        color=\"indigo\"\n        hide-details\n        large\n        >\n        \n        </v-checkbox>\n      </v-col>\n    </v-row>\n    <v-row v-if=\"abilitaPagamentoOnline\">\n      <v-col v-if=\"pagamentoOnlineControllo\">\n        <v-text-field\n          v-model=\"metodiPagamento\"\n          id=\"metodoPagamento\"\n          label=\"Metodo di Pagamento\"\n          name=\"metodoPagamento\"\n          type=\"text\"\n          color=\"accent accent-3\"\n          :rules=\"required.concat(emailRules)\"\n          filled\n          dense\n          rounded      \n          />\n      </v-col>\n    </v-row>\n    <v-spacer></v-spacer>\n    <v-container v-if=\"affitto || vendita\" >\n      <v-btn \n      class=\"submit\" \n      rounded color=\"accent accent-3\" \n      dark \n      @click=\"salvaAnnuncio\" \n      :disabled=\"!valid\"\n      >Pubblica Annuncio\n    </v-btn>\n    </v-container>\n  </v-form>\n  <v-container>\n    \n    <v-snackbar v-model=\"erroreAnnuncio\" color=\"red\" justify=\"center\">\n      {{ message }}\n    </v-snackbar>\n  </v-container>\n  </v-container>\n</template>\n  \n<script>\n\nexport default {\n    data: () => ({\n        metodiPagamento: '',\n        abilitaPagamentoOnline: false,\n        vendita: true,\n        affitto: false,\n        valid: false,\n        selectCat: null,\n        categories: [],\n        costoH: \"\",\n        costoG: \"\",\n        costoS: \"\",\n        costoVen: \"\",\n        range: {\n            start: \"\",\n            end: \"\",\n        },\n        periodoNonDisponibile: [],\n        titolo: \"\",\n        descrizione: \"\",\n        via: \"\",\n        città: \"\",\n        provincia: \"\",\n        annuncioSalvato: false,\n        erroreAnnuncio: false,\n        message: \"\",\n        required: [\n            v => !!v || \"Campo obbligatorio\"\n        ],\n        titoloRule: [\n            v => v.length <= 30 || \"Il titolo non può superare i 30 caratteri!\"\n        ],\n        descrizioneRule: [\n            v => v.length <= 250 || \"La descrizione non può superare i 250 caratteri!\"\n        ],\n        emailRules: [\n          v => /^(([^<>()[\\]\\\\.,;:\\s@']+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@']+)*)|('.+'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(v) || 'E-mail non valida.',\n        ],\n        noNegative: [\n          v => v >= 0 || \"No negativi\"\n        ]\n\n    }),\n    methods: {\n        async salvaAnnuncio() {\n            console.log(\"Abilita pagamento online è:\", this.abilitaPagamentoOnline);\n            try {\n                fetch(this.$url + \"api/a/savea\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"x-access-token\": this.$store.getters.token\n                    },\n                    body: JSON.stringify({\n                        inserzionista: this.$store.state.datiUtente.username,\n                        titolo: this.titolo,\n                        descrizione: this.descrizione,\n                        dataPubblicazione: this.today(),\n                        modalitaTransazione: this.vendita ? \"Vendita\" : \"Affitto\",\n                        categoria: this.selectCat,\n                        via: this.via,\n                        citta: this.città,\n                        provincia: this.provincia,\n                        contoPaypall: this.contoPayPal,\n                        prezzo: this.costoVen,\n                        prezzoAffittoAlGiorno: this.costoG,\n                        prezzoAffittoSettimanale: this.costoS,\n                        prezzoAffittoAllOra: this.costoH,\n                        pagamentoOnline: this.abilitaPagamentoOnline\n                    })\n                }).then((resp) => resp.json())\n                    .then(data => {\n                    console.log(data);\n                    if (data.success === false) {\n                        this.message = data.message;\n                        this.erroreAnnuncio = true;\n                        return;\n                    }\n                    this.annuncioSalvato = true;\n                    this.contaAnnunciOnline(this.$store.state.datiUtente.username);\n                    this.$store.state.pubblicazioneAnnuncioSuccess = true;\n                    this.$router.push(\"/\");\n                });\n            }\n            catch (error) {\n                console.error(error);\n            }\n            if ((this.$store.state.datiUtente.metodiPagamento === '' || this.$store.state.datiUtente.metodiPagamento === undefined) && this.abilitaPagamentoOnline) {\n              this.salvaMetodoPagamento();\n            }\n        },\n        async salvaMetodoPagamento() {\n          try {\n                console.log(this.metodiPagamento);\n                this.$store.state.datiUtente.metodiPagamento = this.metodiPagamento;\n                fetch(this.$url + \"api/u/updateu\", {\n                    method: 'PATCH',\n                    headers: { \n                        \"Content-Type\": \"application/json\",\n                        \"x-access-token\": this.$store.state.dataAuth.token\n                    },\n                    body: JSON.stringify({\n                        username: this.$store.state.datiUtente.username,\n                        metodiPagamento: this.metodiPagamento,\n                    })\n                }).then(console.log(\"Dati utente aggiornati per \", this.$store.state.datiUtente.nome, \"!\"))\n            } catch (error) {\n                console.error(error); // If there is any error you will catch them here\n            }\n        },\n        today() {\n            var today = new Date();\n            var dd = String(today.getDate()).padStart(2, \"0\");\n            var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n            var yyyy = today.getFullYear();\n            return yyyy + \"/\" + mm + \"/\" + dd;\n        }\n    },\n    computed: {\n      pagamentoOnlineControllo () {\n        console.log(\"Metodi di pagamento è. \", this.$store.state.datiUtente.metodiPagamento)\n        console.log(this.$store.state.datiUtente)\n        return (this.$store.state.datiUtente.metodiPagamento === '' || this.$store.state.datiUtente.metodiPagamento === undefined);\n      }\n    }, \n    mounted() {\n        if (this.$store.state.dataAuth.success == false) {\n            this.$router.push(\"/userloginsignup\");\n        }\n    },\n    created() {\n        this.$categories.forEach(v => this.categories.push(v.title));\n    },\n}\n\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}